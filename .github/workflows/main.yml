name: CI-Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# env:
    # BUILD_TYPE: Debug
#   CODECOV_TOKEN: "8cf7e822-d3dc-4ad8-9f7a-17cd58d18f80"

jobs:

  build:
    
    name: ${{ matrix.os }}-${{ matrix.cxx }}-build-and-test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [ubuntu, macos]
        include:
          #- name: windows
          #  os: windows-latest
          #  cxx: cl.exe
          #  cc: cl.exe
          - name: macos
            os: macos-latest
            cxx: clang++
            cc: clang
          - name: ubuntu
            os: ubuntu-latest
            cxx: g++
            cc: gcc

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true 

      - name: Install Dependencies - ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt update
          sudo apt install -y ocl-icd-opencl-dev libtiff-dev lcov

      # - name: Instal Dependencies - windows
      #   if: matrix.name == 'windows-msvc'
      #   uses: crazy-max/ghaction-chocolatey@v1
      #   with:
      #     args: install opencl-intel-cpu-runtime

      - name: Install cmake
        uses: lukka/get-cmake@latest

      - name: Run CMake with Ninja
        uses: lukka/run-cmake@main
        id: runcmake
        with:
          cmakeGenerator: 'Ninja'  
          cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildWithCMakeArgs: '-- -v'
          cmakeAppendedArgs: '-DBUILD_CODE_COVERAGE=ON'
          buildDirectory: '${{ runner.workspace }}/build' 

      - name: Run Tests
        if: startsWith(matrix.os, 'macos')
        working-directory: ${{ runner.workspace }}/build
        shell: bash
        run: ctest -T test -T coverage

      - name: Code Coverage report
        run: |
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.info
          lcov --list coverage.info
          bash <(curl -s https://codecov.io/bash) -f coverage.info 
